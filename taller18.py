# -*- coding: utf-8 -*-
"""Taller18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y0ia1uqgOXO8-hhDQTVwGs1asOXdrC22
"""

import numpy as np
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt

# Definir la función exponencial
def exponential_model(x, a, b):
    return a * np.exp(b * x)

# Datos de entrada
x_data = np.array([1, 2, 3, 4, 5, 6])
y_data = np.array([1.6, 2.3, 3.4, 4.5, 6.4, 9])

# Ajuste del modelo exponencial
popt, pcov = curve_fit(exponential_model, x_data, y_data)

# Parámetros del modelo
a, b = popt

# Generar puntos para la curva ajustada
x_fit = np.linspace(min(x_data), max(x_data), 100)
y_fit = exponential_model(x_fit, *popt)

# Graficar los datos y la curva ajustada
plt.scatter(x_data, y_data, label='Datos')
plt.plot(x_fit, y_fit, 'r-', label=f'Ajuste: a={a:.2f}, b={b:.2f}')
plt.xlabel('X')
plt.ylabel('Y')
plt.legend()
plt.title('Regresión Exponencial')
plt.grid(True)
plt.show()